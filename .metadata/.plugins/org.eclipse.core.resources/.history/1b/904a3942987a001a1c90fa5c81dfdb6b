package Yachke;
import java.util.Scanner;
import java.io.PrintStream;

public class Yachke {

	static int computeMax(int B, int n, int[] cost) {
		// Preconditions: cost[0..n-1] contains positive integers where c[i] is the
		// minimum cost of a property in segment i of Yonge Street. B is a positive
		// integer.
		// Postcondition: returns the maximum number of properties Mrs. Yachke
		// can buy within a budget of B such that no two properties are in adjacent
		// segments of Yonge Street.

		// FILL IN THIS ROUTINE.
	// 	if (n == 2 && (B >= cost[0] || B >= cost[1])) {
	// 		return 1;
	// 	} else if (B < cost[0]) {
	// 		return 0;
	// 	} else if (B < cost[1]) {
	// 		return 0;
	// 	} else {
	// 		return (Math.max(computeMax(B, n - 1, cost), computeMax(B - cost[n - 1], n - 2, cost) + 1));
	// 	}

		int [] M = new int[n];

		for (int i=n-1; i == 1; i--){
			if (i == 2 && (B >= cost[0] || B >= cost[1])) {
				M[i] = 1;
			} else if (B < cost[i]) {
				M[i] = 0;
			}else{
				M[i] = Math.max(1 + M[i + 2], M[i+1]);
			}
		}
		return M[2];
	 }

	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		PrintStream out = System.out;

		int B = in.nextInt();
		while (B > 0) {
			int n = in.nextInt();
			int[] cost = new int[n];
			for (int i = 0; i < n; i++)
				cost[i] = in.nextInt();
			out.println(computeMax(B, n, cost));
			B = in.nextInt();
		}
	}
}